// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace BlazorApp.Pwa.Shared.Components.Navigation
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "H:\Projects\firemanwayne\Blazor.Pwa\BlazorApp\Shared\Components\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "H:\Projects\firemanwayne\Blazor.Pwa\BlazorApp\Shared\Components\_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "H:\Projects\firemanwayne\Blazor.Pwa\BlazorApp\Shared\Components\_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
    public partial class SideNavBar : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#nullable restore
#line 1 "H:\Projects\firemanwayne\Blazor.Pwa\BlazorApp\Shared\Components\Navigation\SideNavBar.razor"
       

    [Parameter] public IEnumerable<BarItem> BarItems { get; set; } = new List<BarItem>();

    [Parameter] public EventCallback<bool> OnSideNavToggled { get; set; }

    bool isOpen;

    string Width { get; set; } = "width:300px;";

    string LockIcon { get => IsLocked ? "lock" : "lock_open"; }

    bool IsLocked { get; set; }

    bool IsOpen
    {
        get => isOpen;
        set
        {
            isOpen = value;

            if (OnSideNavToggled.HasDelegate)
                OnSideNavToggled.InvokeAsync(value);
        }
    }

    void ToggleLock()
    {
        if (IsLocked)
            UnlockSideNav();
        else
            LockSideNav();
    }

    void LockSideNav()
    {
        IsLocked = true;
        IsOpen = true;
        Width = "width: 300px;";
    }
    void UnlockSideNav()
    {
        IsLocked = false;

        IsOpen = false;
        Width = "width: 85px;";
    }

    void OnMouseOut()
    {
        if (!IsLocked)
        {
            IsOpen = false;
            Width = "width: 85px;";
        }
    }

    void OnMouseOver()
    {
        if (!IsLocked)
        {
            IsOpen = true;
            Width = "width: 300px;";
        }
    }

#line default
#line hidden
#nullable disable
    }
}
#pragma warning restore 1591
